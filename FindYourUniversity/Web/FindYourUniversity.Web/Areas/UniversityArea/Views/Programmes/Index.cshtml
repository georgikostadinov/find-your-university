@using FindYourUniversity.Web.Areas.UniversityArea.ViewModels;

@(Html.Kendo().Grid<ProgrammeViewModel>()
    .Name("grid").HtmlAttributes(new { @class="table" })
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Hidden();
        columns.Bound(p => p.Name);
        columns.ForeignKey(p => p.DegreeId, (System.Collections.IEnumerable)ViewData["degrees"], "Id", "Name").Width(220);
        columns.ForeignKey(p => p.FacultyId, (System.Collections.IEnumerable)ViewData["faculties"], "Id", "Name");
        columns.Bound(p => p.Description);

        columns.Command(command => command.Destroy().Text("Изтриване")).Title("Изтриване").Width(110);
        columns.Command(command => command.Edit().Text("Промяна")).Title("Промяна").Width(100);
    })
    .ToolBar(toolBar =>
        {
            toolBar.Create().Text("Добавяне на специалност");
        })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Filterable()
    .Groupable()
    .Pageable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(p => p.Id);
            model.Field(p => p.Id).Editable(false);
            model.Field(p => p.DegreeId).DefaultValue(1);
            model.Field(p => p.FacultyId).DefaultValue(1);
        })
        .Read(read => read.Action("Read", "Programmes"))
            .Update(update => update.Action("Update", "Programmes"))
            .Create(create => create.Action("Create", "Programmes"))
            .Destroy(destroy => destroy.Action("Destroy", "Programmes"))
    )
)
